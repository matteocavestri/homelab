services:
  traefik:
    image: traefik:v3.0.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - monitoring-proxy
      - monitoring
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp # Uncomment if you want HTTP3
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cf_api_token
      # CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN} # if using .env
      #TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    secrets:
      - cf_api_token
    env_file: .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${TRAEFIK_YAML}:/traefik.yml:ro
      - ${TRAEFIK_ACME}:/acme.json
      - ${CONFIG_YAML}:/config.yml:ro
      - ${TRAEFIK_LOGS}:/var/log/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host(`${HOST}`)
      - traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.traefik.middlewares=traefik-https-redirect
      - traefik.http.routers.traefik-secure.entrypoints=https
      - traefik.http.routers.traefik-secure.rule=Host(`${HOST}`)
      - traefik.http.routers.traefik-secure.middlewares=authentik@file
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=${RESOLVER}
      - traefik.http.routers.traefik-secure.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.traefik-secure.tls.domains[0].sans=${SANS}
      - traefik.http.routers.traefik-secure.service=api@internal
      - traefik.docker.network=proxy
secrets:
  cf_api_token:
    file: ${CF_API}
networks:
  proxy:
    external: true
  monitoring-proxy:
    external: true
  monitoring:
    external: true
